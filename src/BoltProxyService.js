//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;


var MutableEphemeralStateService = require('./MutableEphemeralStateService')
var MutableEphemeralStateServiceClient = MutableEphemeralStateService.Client
var MutableEphemeralStateServiceProcessor = MutableEphemeralStateService.Processor
var ttypes = require('./bolt_types');
//HELPER FUNCTIONS AND STRUCTURES

BoltProxyService_updateTopology_args = function(args) {
  this.topology = null;
  if (args) {
    if (args.topology !== undefined) {
      this.topology = args.topology;
    }
  }
};
BoltProxyService_updateTopology_args.prototype = {};
BoltProxyService_updateTopology_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.topology = new ttypes.TopologyMetadata();
        this.topology.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoltProxyService_updateTopology_args.prototype.write = function(output) {
  output.writeStructBegin('BoltProxyService_updateTopology_args');
  if (this.topology !== null && this.topology !== undefined) {
    output.writeFieldBegin('topology', Thrift.Type.STRUCT, 1);
    this.topology.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoltProxyService_updateTopology_result = function(args) {
  this.e = null;
  if (args instanceof ttypes.BoltError) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoltProxyService_updateTopology_result.prototype = {};
BoltProxyService_updateTopology_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.BoltError();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoltProxyService_updateTopology_result.prototype.write = function(output) {
  output.writeStructBegin('BoltProxyService_updateTopology_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoltProxyService_dispatchRecords_args = function(args) {
  this.records = null;
  if (args) {
    if (args.records !== undefined) {
      this.records = args.records;
    }
  }
};
BoltProxyService_dispatchRecords_args.prototype = {};
BoltProxyService_dispatchRecords_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size124 = 0;
        var _rtmp3128;
        this.records = [];
        var _etype127 = 0;
        _rtmp3128 = input.readListBegin();
        _etype127 = _rtmp3128.etype;
        _size124 = _rtmp3128.size;
        for (var _i129 = 0; _i129 < _size124; ++_i129)
        {
          var elem130 = null;
          elem130 = new ttypes.Record();
          elem130.read(input);
          this.records.push(elem130);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoltProxyService_dispatchRecords_args.prototype.write = function(output) {
  output.writeStructBegin('BoltProxyService_dispatchRecords_args');
  if (this.records !== null && this.records !== undefined) {
    output.writeFieldBegin('records', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.records.length);
    for (var iter131 in this.records)
    {
      if (this.records.hasOwnProperty(iter131))
      {
        iter131 = this.records[iter131];
        iter131.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoltProxyService_dispatchRecords_result = function(args) {
  this.e = null;
  if (args instanceof ttypes.BoltError) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoltProxyService_dispatchRecords_result.prototype = {};
BoltProxyService_dispatchRecords_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.BoltError();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoltProxyService_dispatchRecords_result.prototype.write = function(output) {
  output.writeStructBegin('BoltProxyService_dispatchRecords_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoltProxyService_updateSchedulerAddress_args = function(args) {
  this.e = null;
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoltProxyService_updateSchedulerAddress_args.prototype = {};
BoltProxyService_updateSchedulerAddress_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.Endpoint();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoltProxyService_updateSchedulerAddress_args.prototype.write = function(output) {
  output.writeStructBegin('BoltProxyService_updateSchedulerAddress_args');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoltProxyService_updateSchedulerAddress_result = function(args) {
  this.e = null;
  if (args instanceof ttypes.BoltError) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoltProxyService_updateSchedulerAddress_result.prototype = {};
BoltProxyService_updateSchedulerAddress_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.BoltError();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoltProxyService_updateSchedulerAddress_result.prototype.write = function(output) {
  output.writeStructBegin('BoltProxyService_updateSchedulerAddress_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoltProxyService_registerWithScheduler_args = function(args) {
  this.meta = null;
  if (args) {
    if (args.meta !== undefined) {
      this.meta = args.meta;
    }
  }
};
BoltProxyService_registerWithScheduler_args.prototype = {};
BoltProxyService_registerWithScheduler_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.meta = new ttypes.ComputationMetadata();
        this.meta.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoltProxyService_registerWithScheduler_args.prototype.write = function(output) {
  output.writeStructBegin('BoltProxyService_registerWithScheduler_args');
  if (this.meta !== null && this.meta !== undefined) {
    output.writeFieldBegin('meta', Thrift.Type.STRUCT, 1);
    console.log('writing', output);
    this.meta.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoltProxyService_registerWithScheduler_result = function(args) {
};
BoltProxyService_registerWithScheduler_result.prototype = {};
BoltProxyService_registerWithScheduler_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoltProxyService_registerWithScheduler_result.prototype.write = function(output) {
  output.writeStructBegin('BoltProxyService_registerWithScheduler_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoltProxyServiceClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
Thrift.inherits(BoltProxyServiceClient, MutableEphemeralStateServiceClient);
BoltProxyServiceClient.prototype.seqid = function() { return this._seqid; }
BoltProxyServiceClient.prototype.new_seqid = function() { return this._seqid += 1; }
BoltProxyServiceClient.prototype.updateTopology = function(topology, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_updateTopology(topology);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_updateTopology(topology);
  }
};

BoltProxyServiceClient.prototype.send_updateTopology = function(topology) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('updateTopology', Thrift.MessageType.CALL, this.seqid());
  var args = new BoltProxyService_updateTopology_args();
  args.topology = topology;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BoltProxyServiceClient.prototype.recv_updateTopology = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BoltProxyService_updateTopology_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  callback(null)
};
BoltProxyServiceClient.prototype.dispatchRecords = function(records, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_dispatchRecords(records);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_dispatchRecords(records);
  }
};

BoltProxyServiceClient.prototype.send_dispatchRecords = function(records) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('dispatchRecords', Thrift.MessageType.CALL, this.seqid());
  var args = new BoltProxyService_dispatchRecords_args();
  args.records = records;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BoltProxyServiceClient.prototype.recv_dispatchRecords = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BoltProxyService_dispatchRecords_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  callback(null)
};
BoltProxyServiceClient.prototype.updateSchedulerAddress = function(e, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_updateSchedulerAddress(e);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_updateSchedulerAddress(e);
  }
};

BoltProxyServiceClient.prototype.send_updateSchedulerAddress = function(e) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('updateSchedulerAddress', Thrift.MessageType.CALL, this.seqid());
  var args = new BoltProxyService_updateSchedulerAddress_args();
  args.e = e;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BoltProxyServiceClient.prototype.recv_updateSchedulerAddress = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BoltProxyService_updateSchedulerAddress_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  callback(null)
};
BoltProxyServiceClient.prototype.registerWithScheduler = function(meta, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_registerWithScheduler(meta);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_registerWithScheduler(meta);
  }
};

BoltProxyServiceClient.prototype.send_registerWithScheduler = function(meta) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('registerWithScheduler', Thrift.MessageType.ONEWAY, this.seqid());
  var args = new BoltProxyService_registerWithScheduler_args();
  args.meta = meta;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};
BoltProxyServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
Thrift.inherits(BoltProxyServiceProcessor, MutableEphemeralStateServiceProcessor)
BoltProxyServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

BoltProxyServiceProcessor.prototype.process_updateTopology = function(seqid, input, output) {
  var args = new BoltProxyService_updateTopology_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.updateTopology.length === 1) {
    Q.fcall(this._handler.updateTopology, args.topology)
      .then(function(result) {
        var result = new BoltProxyService_updateTopology_result({success: result});
        output.writeMessageBegin("updateTopology", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BoltProxyService_updateTopology_result(err);
        output.writeMessageBegin("updateTopology", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.updateTopology(args.topology,  function (err, result) {
      var result = new BoltProxyService_updateTopology_result((err != null ? err : {success: result}));
      output.writeMessageBegin("updateTopology", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BoltProxyServiceProcessor.prototype.process_dispatchRecords = function(seqid, input, output) {
  var args = new BoltProxyService_dispatchRecords_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.dispatchRecords.length === 1) {
    Q.fcall(this._handler.dispatchRecords, args.records)
      .then(function(result) {
        var result = new BoltProxyService_dispatchRecords_result({success: result});
        output.writeMessageBegin("dispatchRecords", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BoltProxyService_dispatchRecords_result(err);
        output.writeMessageBegin("dispatchRecords", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.dispatchRecords(args.records,  function (err, result) {
      var result = new BoltProxyService_dispatchRecords_result((err != null ? err : {success: result}));
      output.writeMessageBegin("dispatchRecords", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BoltProxyServiceProcessor.prototype.process_updateSchedulerAddress = function(seqid, input, output) {
  var args = new BoltProxyService_updateSchedulerAddress_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.updateSchedulerAddress.length === 1) {
    Q.fcall(this._handler.updateSchedulerAddress, args.e)
      .then(function(result) {
        var result = new BoltProxyService_updateSchedulerAddress_result({success: result});
        output.writeMessageBegin("updateSchedulerAddress", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BoltProxyService_updateSchedulerAddress_result(err);
        output.writeMessageBegin("updateSchedulerAddress", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.updateSchedulerAddress(args.e,  function (err, result) {
      var result = new BoltProxyService_updateSchedulerAddress_result((err != null ? err : {success: result}));
      output.writeMessageBegin("updateSchedulerAddress", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BoltProxyServiceProcessor.prototype.process_registerWithScheduler = function(seqid, input, output) {
  var args = new BoltProxyService_registerWithScheduler_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.registerWithScheduler(args.meta)
}

